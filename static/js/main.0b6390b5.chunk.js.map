{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchNavbar.js","components/layout/AddBtn.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","url","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","useRef","style","marginBottom","className","id","required","placeholder","ref","onChange","e","current","value","htmlFor","AddBtn","href","deleteLog","method","setCurrent","log","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","logReducer","action","filter","console","techReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6390b5.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from './types';\r\n\r\nconst url =\r\n  'https://my-json-server.typicode.com/tomascatena/react-it-logger-json-server';\r\n\r\n// export const getLogs = () => {\r\n//   return async (dispatch, getState) => {\r\n//     setLoading();\r\n\r\n//     const res = await fetch('/logs');\r\n//     const data = await res.json();\r\n\r\n//     dispatch({\r\n//       type: GET_LOGS,\r\n//       payload: data,\r\n//     });\r\n//   };\r\n// };\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/logs`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log to the server\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/logs`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`${url}/logs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Update log on the server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Search logs from server\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchNavbar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className=\"blue\">\r\n      <div className=\"nav-wrapper\">\r\n        <form>\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"search\"\r\n              type=\"search\"\r\n              required\r\n              placeholder=\"Search Logs...\"\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className=\"label-icon\" htmlFor=\"search\">\r\n              <i className=\"material-icons\">search</i>\r\n            </label>\r\n            <i className=\"material-icons\">close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchNavbar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchNavbar);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-log-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href=\"#tech-list-modal\"\r\n            className=\"btn-floating green modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n            <i className=\"material-icons\">person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        <a\r\n          href=\"#edit-log-modal\"\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className=\"grey-text\">\r\n          <span className=\"black-text\">ID #{log.id}</span> last updated by{' '}\r\n          <span className=\"black-text\">{log.tech}</span> on{' '}\r\n          <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n        </span>\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"progress blue lighten-4\">\r\n      <div className=\"indeterminate blue\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, [getLogs]);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"collection with-header\">\r\n        <li className=\"collection-header\">\r\n          <h4 className=\"center\">System Logs</h4>\r\n        </li>\r\n        {!loading && logs.length === 0 ? (\r\n          <p className=\"center\">No logs to show...</p>\r\n        ) : (\r\n          logs.map((log) => <LogItem key={log.id} log={log} />)\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from './types';\r\n\r\nconst url =\r\n  'https://my-json-server.typicode.com/tomascatena/react-it-logger-json-server';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/techs`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/techs`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete a technician from server\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`${url}/techs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../actions/techActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, [getTechs]);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((t) => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLog(newLog);\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      // Clear fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <p>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"filled-in\"\r\n                checked={attention}\r\n                value={attention}\r\n                onChange={(e) => setAttention(!attention)}\r\n              />\r\n              <span>Needs Attention</span>\r\n            </label>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ updateLog, current }) => {\r\n  const [message, setMessage] = useState(' ');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              id=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              id=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <p>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"filled-in\"\r\n                checked={attention}\r\n                value={attention}\r\n                onChange={(e) => setAttention(!attention)}\r\n              />\r\n              <span>Needs Attention</span>\r\n            </label>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      addTech({ firstName, lastName });\r\n      M.toast({ html: `${firstName} ${lastName} added!` });\r\n\r\n      // Clear fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-tech-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>New Technician</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"firstName\" className=\"active\">\r\n              First Name\r\n            </label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"lastName\" className=\"active\">\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { firstName, lastName, id }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: `${firstName} ${lastName} removed!` });\r\n  };\r\n\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport TechItem from './TechItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, [getTechs]);\r\n\r\n  return (\r\n    <div id=\"tech-list-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Technician List</h4>\r\n        <ul className=\"collection\">\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => {\r\n              return <TechItem tech={tech} key={tech.id} />;\r\n            })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst logReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) => {\r\n          if (log.id === action.payload.id) {\r\n            return action.payload;\r\n          } else {\r\n            return log;\r\n          }\r\n        }),\r\n        loading: false,\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logReducer;\r\n","import {\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  GET_TECHS,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst techReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default techReducer;\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport './App.css';\n\nimport SearchBar from './components/layout/SearchNavbar';\nimport AddBtn from './components/layout/AddBtn';\nimport Logs from './components/logs/Logs';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <Logs />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <AddBtn />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}